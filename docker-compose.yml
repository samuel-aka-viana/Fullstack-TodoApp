version: '3'

services:
    flaskapp:
      image: pentos/todo-back:latest
      container_name: todo_flask
      env_file:
        - .env
      ports:
        - 5000:5000
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
        interval: 30s
        timeout: 10s
        retries: 3
      restart: unless-stopped
      depends_on:
        postgres:
          condition: service_healthy
      networks:
        - fpf_network

    reactapp:
      image: pentos/todo-front:latest
      container_name: todo_react
      ports:
        - '80:80'
      restart: unless-stopped
      depends_on:
        - flaskapp
      networks:
        - fpf_network

    postgres:
      image: postgres:latest
      container_name: todo_postgres
      env_file:
        - .env
      ports:
        - '5432:5432'
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 10s
        timeout: 5s
        retries: 5
      volumes:
        - postgres-volume:/var/lib/postgresql/data
        - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      restart: unless-stopped
      networks:
        - fpf_network

networks:
  fpf_network:
    driver: bridge

volumes:
  postgres-volume:
